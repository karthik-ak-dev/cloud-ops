# Cloud-ops-nodejs-ms configuration for production environment
name: cloud-ops-nodejs-ms
environment: prod
replicaCount: 3

# ServiceAccount configuration for secure AWS access via IRSA
serviceAccount:
  create: true
  name: cloud-ops-nodejs-ms-sa
  annotations:
    # This provides secure access to RDS, S3, Secrets Manager, and Redis/ElastiCache
    # Replace with actual role ARN from Terraform output: terraform output app_full_access_role_arn
    eks.amazonaws.com/role-arn: "arn:aws:iam::035475678676:role/prod-client-name-app-full-access-role"

image:
  repository: 035475678676.dkr.ecr.eu-west-3.amazonaws.com/prod-client-name-services
  tag: "cloud-ops-nodejs-ms-latest"  # Update with your production tag

service:
  port: 8080

ingress:
  enabled: true
  # Complete annotation set (Helm replaces, doesn't merge annotations)
  annotations:
    # Core ALB annotations (required for ALB functionality)
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    
    # Environment-specific configuration
    alb.ingress.kubernetes.io/group.name: prod-client-name
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    # Use ALB security group created by ALB controller module
    alb.ingress.kubernetes.io/security-groups: "UPDATE_WITH_TERRAFORM_OUTPUT_alb_security_group_id"
  hosts:
    # No host restriction - accepts any hostname (including ALB's direct DNS)
    - paths:
        - path: /cloud-ops-nodejs-ms
          pathType: Prefix

autoscaling:
  enabled: false
  # Disabled until metrics server is deployed
  # minReplicas: 3
  # maxReplicas: 10
  # targetCPUUtilizationPercentage: 75
  # targetMemoryUtilizationPercentage: 75

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

env:
  - name: NODE_ENV
    value: production
  - name: LOG_LEVEL
    value: info
  - name: SERVICE_VERSION
    value: "1.0.0"
